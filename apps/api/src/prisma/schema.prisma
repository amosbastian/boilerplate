// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

generator typegraphql {
  provider = "typegraphql-prisma"
  output   = "../../../../node_modules/@generated/type-graphql"
}

model Account {
  id                 String    @id @default(cuid())
  userId             String
  providerType       String
  providerId         String
  providerAccountId  String
  refreshToken       String?
  accessToken        String?
  accessTokenExpires DateTime?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  user               User      @relation(fields: [userId], references: [id])

  @@unique([providerId, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  userId       String
  expires      DateTime
  sessionToken String   @unique
  accessToken  String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id])
}

model User {
  id               String        @id @default(cuid())
  stripeCustomerId String?       @unique
  name             String?
  email            String?       @unique
  emailVerified    DateTime?
  image            String?
  createdAt        DateTime      @default(now())
  updatedAt        DateTime      @updatedAt
  subscription     Subscription?
  accounts         Account[]
  sessions         Session[]
  roles            Role[]
  billingAddress   Json?
  paymentMethod    Json?
}

model Role {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  users     User[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VerificationRequest {
  id         String   @id @default(cuid())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}

// Stripe

enum PriceType {
  ONE_TIME
  RECURRING
}

model Price {
  id            String         @id
  active        Boolean
  product       Product        @relation(fields: [productId], references: [id])
  productId     String
  unitAmount    Int
  type          PriceType
  recurring     Json
  metadata      Json
  currency      String         @db.VarChar(3)
  subscriptions Subscription[]
}

model Product {
  id          String  @id
  name        String
  active      Boolean
  image       String?
  metadata    Json
  description String?
  prices      Price[]
}

enum SubscriptionStatus {
  ACTIVE
  PAST_DUE
  UNPAID
  CANCELLED
  INCOMPLETE
  INCOMPLETE_EXPIRED
  TRIALLING
}

model Subscription {
  id                 String             @id
  user               User               @relation(fields: [userId], references: [id])
  userId             String
  price              Price              @relation(fields: [priceId], references: [id])
  priceId            String
  status             SubscriptionStatus
  cancelAtPeriodEnd  Boolean
  currentPeriodEnd   DateTime           @db.Timestamptz
  currentPeriodStart DateTime           @db.Timestamptz
  trialStart         DateTime?          @db.Timestamptz
  trialEnd           DateTime?          @db.Timestamptz
  cancelAt           DateTime?          @db.Timestamptz
  cancelledAt        DateTime?          @db.Timestamptz
  endedAt            DateTime?          @db.Timestamptz
  metadata           Json
  createdAt          DateTime           @default(now())
  updatedAt          DateTime           @updatedAt
}
